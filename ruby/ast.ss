#lang racket/base

;; Definitions of AST structures

;; TODO: lots of misnamed/abbreviated things, rename/expand them

(provide (all-defined-out))

;; give position and span attributes to all ast types
(define-struct Location (position span))

;; ast structures
(define-struct (Program Location) (compstmt))
(define-struct (Call-stmt Location) (call vars body))

(define-struct (Inline-if Location) (condition stmt))
(define-struct (Inline-while Location) (condition stmt))
(define-struct (Inline-unless Location) (condition stmt))
(define-struct (Inline-until Location) (condition stmt))
(define-struct (Inline-rescue Location) (condition stmt))

(define-struct (Object Location) ())

(define-struct (Heredoc Location) (value))

(define-struct (Alias Location) (from to))
(define-struct (Undef Location) (undefs))
(define-struct (Bitwise-negation Location) (value))

(define-struct (Normal-argument Location) (id))
(define-struct (Default-argument Location) (id arg))
(define-struct (Args Location) (args rest))
(define-struct (Compstmt Location) (stmts))
(define-struct (Assignment Location) (lhs expr))
(define-struct (Op-assign Location) (lhs op expr))
(define-struct (Op Location) (kind))
(define-struct (Multiple-assignment Location) (mlhs mrhs))
(define-struct (Operation-assignment Location) (op var value))
(define-struct (Identifier Location) (name))
(define-struct (Identifier-none Location) ())
(define-struct (Number Location) (value))
(define-struct (Empty-var Location) ())
(define-struct (Lhs Location) (var))
(define-struct (Mlhs Location) (vars rest))
(define-struct (Mrhs Location) (vars rest))
(define-struct (Empty Location) ())
(define-struct (String-literal Location) (str))
(define-struct (Ternary Location) (expr then else))
(define-struct (String-computation Location) (expr))
(define-struct (Function Location) (op args block))
(define-struct (Call-args Location) (args rest block))
(define-struct (QWords Location) (words left right))
(define-struct (Range-inclusive Location) (value1 value2))
(define-struct (Range-exclusive Location) (value1 value2))
(define-struct (Regexp Location) (values options))
(define-struct (Regexp-char Location) (value))
(define-struct (Regexp-escaped Location) (value))

(define-struct (Regexp-option-ignore-case Location) ())
(define-struct (Regexp-option-extended Location) ())
(define-struct (Regexp-option-multiline Location) ())
(define-struct (Regexp-option-once Location) ())
(define-struct (Regexp-option-none Location) ())
(define-struct (Regexp-option-euc Location) ())
(define-struct (Regexp-option-sjis Location) ())
(define-struct (Regexp-option-utf8 Location) ())

(define-struct (Assoc Location) (key value))
(define-struct (Assoc-list Location) (assocs))

(define-struct (String-octal Location) (value))
(define-struct (String-escaped Location) (value))
(define-struct (String-char Location) (value))
;; (define-struct Dotted-call (obj function args block))
(define-struct (Dotted-access Location) (obj op))
(define-struct (Method-call Location) (object op args block))
(define-struct (Function-call Location) (op args block))
(define-struct (Function-arglist Location) (args rest block))
(define-struct (If-statement Location) (condition body elseifs else))
(define-struct (Unless-statement Location) (condition body else))
(define-struct (While-statement Location) (condition body))
(define-struct (Until-statement Location) (condition body))
(define-struct (For-statement Location) (vars expr body))
(define-struct (Elseif Location) (cond body))
(define-struct (Else Location) (body))
(define-struct (Case-statement Location) (condition whens else))
(define-struct (When-clause Location) (args body))
(define-struct (Body Location) (body else rescue ensure))
(define-struct (BEGIN Location) (body))
(define-struct (END Location) (body))
(define-struct (Begin-statement Location) (body))
(define-struct (Rescue-clause Location) (types args body))
(define-struct (Class-statement Location) (name super body))
(define-struct (Class-expr Location) (expr body))
(define-struct (Constant Location) (id))
(define-struct (Module-statement Location) (name body))
(define-struct (Definition-statement Location) (name args body))
(define-struct (Definition-singleton-statement Location) (name args body))
(define-struct (Singleton Location) (stuff name))
;; (define-struct Arglist (args rest block))
(define-struct (Not Location) (e))
(define-struct (And Location) (e1 e2))
(define-struct (Or Location) (e1 e2))
(define-struct (Block Location) (vars body))
(define-struct (Block-call Location) (expr block))
(define-struct (Do-Block Location) (vars body))
(define-struct (Scoped-lookup Location) (obj var))
(define-struct (Nthref Location) (num))
(define-struct (Backref Location) (obj))
(define-struct (Operation Location) (op arg1 arg2))
(define-struct (Array-lookup Location) (obj args))
(define-struct (Array Location) (args))

(define-struct (Operation-oror Location) ())
(define-struct (Operation-or Location) ())
(define-struct (Operation^ Location) ())
(define-struct (Operation&& Location) ())
(define-struct (Operation& Location) ())
(define-struct (Operation<=> Location) ())
(define-struct (Operation== Location) ())
(define-struct (Operation!= Location) ())
(define-struct (Operation=== Location) ())
(define-struct (Operation=~ Location) ())
(define-struct (Operation!~ Location) ())
(define-struct (Operation> Location) ())
(define-struct (Operation>= Location) ())
(define-struct (Operation< Location) ())
(define-struct (Operation<= Location) ())
(define-struct (Operation+ Location) ())
(define-struct (Operation- Location) ())
(define-struct (Operation* Location) ())
(define-struct (Operation/ Location) ())
(define-struct (Operation% Location) ())
(define-struct (Operation** Location) ())
(define-struct (Operation<< Location) ())
(define-struct (Operation>> Location) ())
(define-struct (Operation~ Location) ())
(define-struct (Operation+@ Location) ())
(define-struct (Operation-@ Location) ())
(define-struct (Operation-aref Location) ())
(define-struct (Operation-arefset Location) ())
(define-struct (Operation-backtick Location) ())
      
(define-struct (Variable Location) (var))
(define-struct (Instance-variable Location) (id))
(define-struct (Global-variable Location) (id))
(define-struct (Class-variable Location) (id))

(define-struct (Return Location) (args))
(define-struct (Break Location) (args))
(define-struct (Redo Location) (args))
(define-struct (Retry Location) (args))
(define-struct (Next Location) (args))
(define-struct (Yield Location) (args))
(define-struct (Super Location) ())

(define-struct (Symbol Location) (id))
(define-struct (Symbol-dsym Location) (value))

(define-struct (__FILE__ Location) ())
(define-struct (True Location) ())
(define-struct (False Location) ())
(define-struct (Nil Location) ())
(define-struct (Self Location) ())

(define-struct (+= Location) ())
(define-struct (-= Location) ())
(define-struct (*= Location) ())
(define-struct (/= Location) ())
(define-struct (%= Location) ())
(define-struct (**= Location) ())
(define-struct (&= Location) ())
(define-struct (or= Location) ())
(define-struct (^= Location) ())
(define-struct (<<= Location) ())
(define-struct (>>= Location) ())
(define-struct (&&= Location) ())
(define-struct (doubleor= Location) ())
